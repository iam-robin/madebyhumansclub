---
import ArticleCard from "./ArticleCard.astro";
const allPosts = await Astro.glob("../pages/posts/*.md");
---

<div class="flex flex-col gap-5">
    {
        allPosts.map((post) => (
            <ArticleCard
                url={post.url}
                name={post.frontmatter.name}
                description={post.frontmatter.description}
            />
        ))
    }
    <ArticleCard name="1" url="#" description="yxz" />
    <ArticleCard name="2" url="#" description="yxz" />
    <ArticleCard name="3" url="#" description="yxz" />
    <ArticleCard name="4" url="#" description="yxz" />
    <ArticleCard name="5" url="#" description="yxz" />
    <ArticleCard name="6" url="#" description="yxz" />
    <ArticleCard name="7" url="#" description="yxz" />
    <ArticleCard name="8" url="#" description="yxz" />
</div>

<script>
    // scroll to top when page is reloaded
    window.onbeforeunload = function () {
        window.scrollTo(0, 0);
    };

    const map = (
        value: number,
        x1: number,
        y1: number,
        x2: number,
        y2: number
    ) => ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;

    const cards = document.querySelectorAll(".card");
    const cardDistancesToTop: any = {};
    const cardHeight: any = {};
    cards.forEach((card, i) => {
        cardDistancesToTop[i] = (card as HTMLElement).offsetTop;
        cardHeight[i] = card.clientHeight;
    });

    window.addEventListener("scroll", () => {
        cards.forEach((card, i) => {
            const cardTop = card.getBoundingClientRect().top;
            const distance = cardDistancesToTop[i] - window.scrollY;
            const scale = map(distance, 40, cardHeight[i] * -4, 1, 0.8);
            const opacity = map(distance, 40, cardHeight[i] * -1, 1, 0);
            if (cardTop <= 40) {
                (card as HTMLElement).style.transform = `scale(${scale})`;
                (card as HTMLElement).style.opacity = opacity.toString();
            } else {
                (card as HTMLElement).style.transform = `scale(1)`;
                (card as HTMLElement).style.opacity = "1";
            }
        });
    });
</script>
